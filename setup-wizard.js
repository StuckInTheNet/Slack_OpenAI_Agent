#!/usr/bin/env node

const readline = require('readline');
const fs = require('fs');
const path = require('path');
const { exec } = require('child_process');

console.log(`
ü§ñ SLACK-OPENAI BOT SETUP WIZARD
===============================

This wizard will help you set up your Slack AI bot in just a few minutes!

What you'll need:
1. Your Slack workspace admin access
2. An OpenAI account (free to create)
3. About 10 minutes

Let's get started! üöÄ
`);

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const questions = [
  {
    key: 'SLACK_BOT_TOKEN',
    question: `
üì± STEP 1: Get your Slack Bot Token

1. Go to: https://api.slack.com/apps
2. Click "Create New App" ‚Üí "From scratch"
3. Name it something like "Team AI Assistant"
4. Click "OAuth & Permissions" ‚Üí Add these Bot Token Scopes:
   - app_mentions:read
   - channels:history
   - channels:read
   - chat:write
   - commands
   - users:read (if available - skip if not found)
5. Click "Install to Workspace"
6. Copy the "Bot User OAuth Token" (starts with xoxb-)

Paste your Slack Bot Token here: `,
    validate: (input) => input.startsWith('xoxb-') || 'Token must start with xoxb-'
  },
  {
    key: 'SLACK_SIGNING_SECRET',
    question: `
üîê STEP 2: Get your Signing Secret

1. In the same Slack app, click "Basic Information"
2. Scroll down to "App Credentials"
3. Copy the "Signing Secret"

Paste your Signing Secret here: `,
    validate: (input) => input.length > 10 || 'Signing secret seems too short'
  },
  {
    key: 'SLACK_APP_TOKEN',
    question: `
‚ö° STEP 3: Enable Socket Mode

1. Click "Socket Mode" in the sidebar
2. Toggle it ON
3. Click "Generate Token" 
4. Name it "socket" and add "connections:write" scope
5. Copy the token (starts with xapp-)

Paste your App Token here: `,
    validate: (input) => input.startsWith('xapp-') || 'Token must start with xapp-'
  },
  {
    key: 'OPENAI_API_KEY',
    question: `
üß† STEP 4: Get your OpenAI API Key

1. Go to: https://platform.openai.com/api-keys
2. Create an account (if you don't have one)
3. Click "Create new secret key"
4. Copy the key (starts with sk-)

Paste your OpenAI API Key here: `,
    validate: (input) => input.startsWith('sk-') || 'API key must start with sk-'
  }
];

let answers = {};
let currentQuestion = 0;

function askQuestion() {
  if (currentQuestion >= questions.length) {
    createEnvFile();
    return;
  }

  const q = questions[currentQuestion];
  
  rl.question(q.question, (answer) => {
    const validation = q.validate(answer.trim());
    
    if (validation !== true) {
      console.log(`‚ùå ${validation}. Please try again.\n`);
      askQuestion();
      return;
    }

    answers[q.key] = answer.trim();
    currentQuestion++;
    console.log('‚úÖ Got it!\n');
    askQuestion();
  });
}

function createEnvFile() {
  const envContent = `# Generated by Setup Wizard
SLACK_BOT_TOKEN=${answers.SLACK_BOT_TOKEN}
SLACK_SIGNING_SECRET=${answers.SLACK_SIGNING_SECRET}
SLACK_APP_TOKEN=${answers.SLACK_APP_TOKEN}
OPENAI_API_KEY=${answers.OPENAI_API_KEY}
OPENAI_MODEL=gpt-3.5-turbo
PORT=3000
API_PORT=3001
`;

  fs.writeFileSync('.env', envContent);
  
  console.log(`
‚úÖ SETUP COMPLETE!
==================

Your .env file has been created with your credentials.

üöÄ NEXT STEPS:

1. Set up Slack events:
   - Go back to your Slack app
   - Click "Event Subscriptions" ‚Üí Turn ON
   - Add bot events: app_mention, message.channels
   - Save changes

2. Start your bot:
   npm start

3. Test it:
   - Invite the bot to a channel: /invite @YourBotName
   - Ask it something: @YourBotName hello!

üéâ You're all set! Your AI assistant is ready to help your team.

Questions? Check the README or open an issue on GitHub.
`);

  // Ask if user wants to start the bot before closing readline
  rl.question('\nWould you like to start the bot now? (y/n): ', (answer) => {
    rl.close(); // Close readline after getting the answer
    
    if (answer.toLowerCase().startsWith('y')) {
      console.log('\nüöÄ Starting your bot...\n');
      exec('npm start', (error, stdout, stderr) => {
        if (error) {
          console.error('Error starting bot:', error);
          return;
        }
        console.log(stdout);
      });
    } else {
      console.log('\nTo start your bot later, run: npm start');
      process.exit(0);
    }
  });
}

// Check if Node.js dependencies are installed
if (!fs.existsSync('node_modules')) {
  console.log('üì¶ Installing dependencies first...\n');
  exec('npm install', (error, stdout, stderr) => {
    if (error) {
      console.error('‚ùå Error installing dependencies:', error);
      console.log('\nPlease run "npm install" manually, then run this wizard again.');
      process.exit(1);
    }
    console.log('‚úÖ Dependencies installed!\n');
    askQuestion();
  });
} else {
  askQuestion();
}